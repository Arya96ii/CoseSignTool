# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Pull Request and Continuous Integration Build
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]
  release:
  #workflow_call:
    # Use "Inputs" and "Secrets" to pass values from caller if needed
    # You can then use the ${{ inputs.variable-name }} and ${{ secrets.envPAT }} syntax to access them
    # See https://docs.github.com/en/actions/using-workflows/reusing-workflows for more info

jobs:
  build:
    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            dir_command: dir /b /a /s
            zip_command_debug: powershell Compress-Archive -Path ./debug/ -DestinationPath CoseSignTool-debug.zip
            zip_command_release: powershell Compress-Archive -Path ./release/ -DestinationPath CoseSignTool-release.zip
          - os: ubuntu-latest
            dir_command: ls -a -R
            zip_command_debug: zip -r CoseSignTool-debug.zip ./debug/
            zip_command_release: zip -r CoseSignTool-release.zip ./release/
          - os: macos-latest
            dir_command: ls -a -R
            zip_command_debug: zip -r CoseSignTool-debug.zip ./debug/
            zip_command_release: zip -r CoseSignTool-release.zip ./release/
        # os: [windows-latest, ubuntu-latest, macOS-latest]
    env:
      #CurrentRelease: ${{ github.event.release.tag_name }}
      CurrentRelease: v0.3.1
      #ReleasePath: $(curl -sL https://api.github.com/repos/actions/checkout/releases/latest | jq -r '.upload_url')
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Build and Test debug
      # Use dotnet test to run Restore, Build, and Test, all in one sweep.
      run: dotnet test --verbosity normal CoseSignTool/CoseSignTool.sln
      shell: bash
      
    - name: List working directory Windows
      if: runner.os == 'Windows'
      run: ${{ matrix.dir_command }}
      #shell: cmd

    - name: List working directory non-Windows
      if: runner.os != 'Windows'  # TODO: Figure out how to set this in an environment variable so we only don't need separate steps.
      run: ${{ matrix.dir_command }}
      #shell: bash
      
  # The remaining steps run only when changes are pushed to Main, i.e., when a pull request completes.
  # While we could run the publish steps in a parallel job, having them here forces them to wait until the unit tests pass.
  # Another option to explore is to run them in a separate job that depands on ALL of the other jobs passing first.
  # Eventually we might want to tweak the CodeQL job to run on what we already built above so it isn't using resources to autobuild.
  
    - name: Publish outputs
      #if: ${{ github.event_name != 'pull_request' }}
      # Publish all of the non-test projects to published/release. We have to use the solution file to get the right output paths.
      run: |
        dotnet publish --no-build --configuration Debug --output published/debug CoseSignTool/CoseSignTool.sln
        dotnet publish --configuration Release --output published/release CoseSignTool/CoseSignTool.sln

    - name: Create zip files for release
      # if: ${{ github.event_name == 'release' }}
      run: |
        ${{ matrix.zip_command_debug }}
        ${{ matrix.zip_command_release }}
        # zip -r CoseSignTool-debug.zip ./debug/
        # zip -r CoseSignTool-release.zip ./release/
      # shell: bash
      working-directory: ./published

      # [IO.Compression.ZipFile]::CreateFromDirectory
              #upload_url=$(curl -sL https://api.github.com/repos/actions/checkout/releases/latest | jq -r '.upload_url')
        #echo UPLOAD_URL=$upload_url >> $GITHUB_ENV
                # zip -r CoseSignTool-debug.zip /home/runner/work/CoseSignTool/CoseSignTool/published/debug/
        # zip -r CoseSignTool-release.zip /home/runner/work/CoseSignTool/CoseSignTool/published/release/

    - name: List published directory Windows
      # if: ${{ (runner.os == 'Windows') && (github.event_name != 'pull_request')  }}
      if: ${{ (runner.os == 'Windows') }}
      run: ${{ matrix.dir_command }}
      # shell: cmd      
      working-directory: ./published
      
    - name: List published directory non-Windows
      # if: ${{ (runner.os != 'Windows') && (github.event_name != 'pull_request') }}
      if: ${{ (runner.os != 'Windows') }}
      run: ${{ matrix.dir_command }}
      # shell: bash
      working-directory: ./published

    # - name: Upload debug artifacts
    #   if: ${{ github.event_name == 'release' }}
    #   uses: skx/github-action-publish-binaries@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     #ReleaseId: tag/${{ env.CurrentRelease }}
    #     # args: '/home/runner/work/CoseSignTool/CoseSignTool/published/debug/*'
    #     args: './published/debug/*'

    - name: Upload release artifacts
      if: runner.os != 'Linux'  # Need to re-test on other OS, but get linux working first
      # if: ${{ github.event_name == 'release' }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./published/CoseSignTool-release.zip
        #asset_name: CoseSignTool-release.zip
        tag: v0.3.1
        #file_glob: true (turn this on if we want to upload all files in the directory)


      

