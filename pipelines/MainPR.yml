# Set trigger to none. The PR build is trigerred by a branch policy instead of the build settings.
trigger: none

parameters:
  - name: ForceCI
    default: false
    type: boolean

variables:
  publishDirectory: '$(Build.ArtifactStagingDirectory)/cosesigntool'
  binaryDirectory: '$(Build.SourcesDirectory)/CoseSignTool/CoseSignTool/bin/Debug/net6.0'
  prPipeline: ${{ and(parameters.ForceCI, ne(variables['Build.Reason'], 'PullRequest')) }}

name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)

jobs:
- job: PR_Build
  displayName: CoseSignTool PR Build
  cancelTimeoutInMinutes: 1
  pool:
    name: Core-ES-Build-Signing-BuildPool-WS2022-PME
  steps:
  - checkout: self
    persistCredentials: True

  - task: PowerShell@2
    displayName: SET PACKAGE DATA
    inputs:
      filePath: 'Pipelines/SetPackageData.ps1'

  - task: DotNetCoreCLI@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      feedsToUse: 'config'
      nugetConfigPath: 'CoseSignTool/NuGet.config'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Test debug'
    inputs:
      command: 'test'
      arguments: -f net6.0 --no-restore
      projects: '**/CoseSignUnitTests.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Clean'
    inputs:
      command: 'custom'
      custom: 'clean'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: Test Release
    inputs:
      command: test
      arguments: -c Release --no-restore -f net6.0
      publishTestResults: true
      projects: '**/CoseSignUnitTests.csproj'

  - task: DotNetCoreCLI@2
    displayName: Publish CoseSignTool
    inputs:
      command: publish
      modifyOutputPath: true
      publishWebProjects: false
      zipAfterPublish: false
      projects: CoseSignTool/CoseSignTool/CoseSignTool.csproj
      arguments: '-c Release -r win-x64 --self-contained true --no-restore -p:PublishSingleFile=true -p:PublishTrimmed=true --output $(publishDirectory) -p:BinaryDirectory=$(binaryDirectory) -p:PublishDirectory=$(publishDirectory)\CoseSignTool'

# Disabling Roslyn Analyzer for now because it won't run on a .NET 6 project unless the build agent is on VS 2022
#  - task: RoslynAnalyzers@3
#    displayName: 'Roslyn analyzer'
#    inputs:
#      userProvideBuildInfo: 'auto'
#      rulesetName: Recommended
#      rulesetVersion: Latest
#    env:
#      SYSTEM_ACCESSTOKEN: $(System.AccessToken)

  - task: AntiMalware@4
    inputs:
      InputType: 'Basic'
      ScanType: 'CustomScan'
      FileDirPath: '$(System.DefaultWorkingDirectory)'
      ForceSignatureUpdate: true
      SignatureUpdateUsesMMPC: true
      TreatSignatureUpdateFailureAs: 'Warning'
      SignatureFreshness: 'UpToDate'
      TreatStaleSignatureAs: 'Error'

  - task: CopyFiles@2
    displayName: 'Copy Exe'
    inputs:
      Contents: '$(publishDirectory)/CoseSignTool/*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'release'
      publishLocation: 'Container'

  - task: BinSkim@4
    inputs:
      InputType: 'Basic'
      Function: 'analyze'
      TargetPattern: 'guardianGlob'
      AnalyzeTargetGlob: '$(Build.ArtifactStagingDirectory)\cosesigntool\CoseSignTool\CoseSignTool.dll;$(Build.ArtifactStagingDirectory)\cosesigntool\CoseSignTool\CoseSignTool.exe;'
      AnalyzeLocalSymbolDirectories: '$(Build.ArtifactStagingDirectory)'

  - task: PostAnalysis@1
    displayName: 'Post analysis - break on failed tasks'
    inputs:
      AllTools: false
      APIScan: false
      BinSkim: true
      BinSkimBreakOn: 'Error'
      CodesignValidation: false
      CredScan: false
      FortifySCA: false
      FxCop: false
      ModernCop: false
      PoliCheck: false
      RoslynAnalyzers: true
      RoslynAnalyzersBreakOn: 'Error'
      SDLNativeRules: false
      Semmle: false
      TSLint: false
      ToolLogsNotFoundAction: 'Standard'

